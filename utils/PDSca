
const _ = require('lodash');

function PDS60ca(network, endPoint, initalHexs, lightType) {

    this.network = network;
    this.ports = [];
    this.initialHexs = [];
    this.endPoint = endPoint;

    foreach (var initialHex in this.initialHexs)
    {
        const hexBytes = HexStrings.DecodeString(initialHex);
        this.ports.push(new ColorData(this, hexBytes, lightType));
    }

}; 

PDS60ca.prototype.SetColorData = (lightTypes) => {

    //var rebuild = new Func<String, LightType, ColorData>((initHex, type) =>
                                   //new ColorData(this, HexStrings.DecodeString(initHex), type));
    //_ports = new List<ColorData>(Enumerable.Zip(_initialHexs, lightTypes, rebuild));
};

PDS60ca.prototype.updateSystem = () => {

    _.each(this.ports, (port) => {
        this.network.sendUpdate(this.endPoint, port);
    });
};